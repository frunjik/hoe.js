/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['hoe.js']) {
  _$jscoverage['hoe.js'] = [];
  _$jscoverage['hoe.js'][3] = 0;
  _$jscoverage['hoe.js'][4] = 0;
  _$jscoverage['hoe.js'][5] = 0;
  _$jscoverage['hoe.js'][8] = 0;
  _$jscoverage['hoe.js'][17] = 0;
  _$jscoverage['hoe.js'][18] = 0;
  _$jscoverage['hoe.js'][19] = 0;
  _$jscoverage['hoe.js'][20] = 0;
  _$jscoverage['hoe.js'][22] = 0;
  _$jscoverage['hoe.js'][23] = 0;
  _$jscoverage['hoe.js'][24] = 0;
  _$jscoverage['hoe.js'][27] = 0;
  _$jscoverage['hoe.js'][28] = 0;
  _$jscoverage['hoe.js'][29] = 0;
  _$jscoverage['hoe.js'][30] = 0;
  _$jscoverage['hoe.js'][33] = 0;
  _$jscoverage['hoe.js'][34] = 0;
  _$jscoverage['hoe.js'][37] = 0;
  _$jscoverage['hoe.js'][41] = 0;
  _$jscoverage['hoe.js'][45] = 0;
  _$jscoverage['hoe.js'][46] = 0;
  _$jscoverage['hoe.js'][48] = 0;
  _$jscoverage['hoe.js'][51] = 0;
  _$jscoverage['hoe.js'][55] = 0;
  _$jscoverage['hoe.js'][62] = 0;
  _$jscoverage['hoe.js'][63] = 0;
  _$jscoverage['hoe.js'][64] = 0;
  _$jscoverage['hoe.js'][66] = 0;
  _$jscoverage['hoe.js'][67] = 0;
  _$jscoverage['hoe.js'][68] = 0;
  _$jscoverage['hoe.js'][69] = 0;
  _$jscoverage['hoe.js'][72] = 0;
  _$jscoverage['hoe.js'][73] = 0;
  _$jscoverage['hoe.js'][79] = 0;
  _$jscoverage['hoe.js'][80] = 0;
  _$jscoverage['hoe.js'][81] = 0;
  _$jscoverage['hoe.js'][82] = 0;
  _$jscoverage['hoe.js'][85] = 0;
  _$jscoverage['hoe.js'][87] = 0;
  _$jscoverage['hoe.js'][88] = 0;
  _$jscoverage['hoe.js'][89] = 0;
  _$jscoverage['hoe.js'][94] = 0;
  _$jscoverage['hoe.js'][95] = 0;
  _$jscoverage['hoe.js'][97] = 0;
  _$jscoverage['hoe.js'][100] = 0;
  _$jscoverage['hoe.js'][101] = 0;
  _$jscoverage['hoe.js'][104] = 0;
  _$jscoverage['hoe.js'][105] = 0;
  _$jscoverage['hoe.js'][107] = 0;
  _$jscoverage['hoe.js'][108] = 0;
  _$jscoverage['hoe.js'][110] = 0;
  _$jscoverage['hoe.js'][114] = 0;
  _$jscoverage['hoe.js'][115] = 0;
  _$jscoverage['hoe.js'][116] = 0;
  _$jscoverage['hoe.js'][117] = 0;
  _$jscoverage['hoe.js'][125] = 0;
  _$jscoverage['hoe.js'][126] = 0;
  _$jscoverage['hoe.js'][127] = 0;
  _$jscoverage['hoe.js'][131] = 0;
  _$jscoverage['hoe.js'][132] = 0;
  _$jscoverage['hoe.js'][140] = 0;
  _$jscoverage['hoe.js'][141] = 0;
}
_$jscoverage['hoe.js'].source = ["// create new object and apply arguments","// hoe(tag [, param ...]","var hoe = function(tag){","    var $ele = jQuery(document.createElement(tag));","    return $ele.hoe.apply($ele, Array.prototype.slice.call(arguments, 1));","};","","hoe.jquery_plugin = function() {","    /*","      Guess which jQuery method should be applied to arguments based on type:","       - string: append text","       - plain object: set html attributes","       - DOM element &amp; jQuery object: append elements","       - array: append elements","    */","","    function _guess_apply($ele, param){","        var type = jQuery.type(param);","        if(type === \"string\"){","            $ele.append(param);","        }","        else if(type === \"array\"){","            for(var i=0, max=param.length; i&lt;max; i++) {","                $ele.append(param[i]);","            }","        }","        else if (type === \"object\") {","            if (jQuery.isPlainObject(param)){","                for(var name in param){","                    $ele.attr(name, param[name]);","                }","            }","            else if((param instanceof jQuery) || (param instanceof Element)){","                $ele.append(param);","            }","            else {","                throw Error(\"Invalid object: \" + param);","            }","        }","        else {","            throw Error(\"Invalid type: \" + type);","        }","    }","","    for(var i=0, max=arguments.length; i&lt;max; i++) {","        _guess_apply(this, arguments[i]);","    }","    return this;","};","","jQuery.fn.hoe = hoe.jquery_plugin;","","// build functions to create hoe objcts on namespace","// by default add most common tags to window object","hoe.init_default_tags = [","    'body', 'div','span', 'pre', 'p', 'a', 'ul', 'ol', 'li',","    'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'strong',","    'section', 'header', 'footer',","    'form', 'label', 'input', 'select', 'button',","    'table', 'thead', 'tbody', 'tfoot', 'tr', 'th','td'","];","hoe.init = function(namespace, tags){","    namespace = namespace || window;","    tags = tags || hoe.init_default_tags;","","    function _create_function(tag){","        return function(){","            var $ele = jQuery(document.createElement(tag));","            return $ele.hoe.apply($ele, arguments);","        };","    }","    for (var i=0, max=tags.length; i&lt;max; i++){","        namespace[tags[i]] = _create_function(tags[i]);","    }","};","","","","hoe.inherit = function (base_type, constructor){","    var new_type;","    if (constructor){","        new_type = constructor;","    }","    else{","        new_type = function(){return base_type.apply(this, arguments);};","    }","    $.extend(new_type, base_type);","    $.extend(new_type.prototype, base_type.prototype);","    return new_type;","};","","","// object helpers that bind scope to object","hoe.Type = function(constructor){","    return hoe.inherit(hoe.Type, constructor);","};","hoe.Type.prototype = {","    // event system","    on: function(observed, event, callback){","        if(observed instanceof jQuery){","            observed.bind(event, $.proxy(callback, this));","        }","        else{","            if (typeof observed._hoe_obs === 'undefined'){","                observed._hoe_obs = {};","            }","            if (!(event in observed._hoe_obs)){","                observed._hoe_obs[event] = [];","            }","            observed._hoe_obs[event].push({scope:this, fn:callback});","        }","    },","    trigger: function(event){","        if (this._hoe_obs &amp;&amp; this._hoe_obs[event]){","            var callbacks = this._hoe_obs[event];","            for (var i=0, max=callbacks.length; i&lt;max; i++){","                callbacks[i].fn.apply(callbacks[i].scope,","                                      Array.prototype.slice.call(arguments, 1));","            }","        }","    },","","    // functional stuff","    forEach: function(seq, fn){","        if (jQuery.type(seq) == 'array'){","            for(var i = 0, len = seq.length; i &lt; len; ++i) {","                fn.call(this, seq[i], i, seq);","            }","        }","        else { // must be an object","            for (var key in seq){","                fn.call(this, seq[key], key, seq);","            }","        }","    }","};","","","// node stuff","if (typeof exports !== 'undefined'){","    exports.hoe = hoe;","}"];
_$jscoverage['hoe.js'][3]++;
var hoe = (function (tag) {
  _$jscoverage['hoe.js'][4]++;
  var $ele = jQuery(document.createElement(tag));
  _$jscoverage['hoe.js'][5]++;
  return $ele.hoe.apply($ele, Array.prototype.slice.call(arguments, 1));
});
_$jscoverage['hoe.js'][8]++;
hoe.jquery_plugin = (function () {
  _$jscoverage['hoe.js'][17]++;
  function _guess_apply($ele, param) {
    _$jscoverage['hoe.js'][18]++;
    var type = jQuery.type(param);
    _$jscoverage['hoe.js'][19]++;
    if ((type === "string")) {
      _$jscoverage['hoe.js'][20]++;
      $ele.append(param);
    }
    else {
      _$jscoverage['hoe.js'][22]++;
      if ((type === "array")) {
        _$jscoverage['hoe.js'][23]++;
        for (var i = 0, max = param.length; (i < max); (i++)) {
          _$jscoverage['hoe.js'][24]++;
          $ele.append(param[i]);
}
      }
      else {
        _$jscoverage['hoe.js'][27]++;
        if ((type === "object")) {
          _$jscoverage['hoe.js'][28]++;
          if (jQuery.isPlainObject(param)) {
            _$jscoverage['hoe.js'][29]++;
            for (var name in param) {
              _$jscoverage['hoe.js'][30]++;
              $ele.attr(name, param[name]);
}
          }
          else {
            _$jscoverage['hoe.js'][33]++;
            if (((param instanceof jQuery) || (param instanceof Element))) {
              _$jscoverage['hoe.js'][34]++;
              $ele.append(param);
            }
            else {
              _$jscoverage['hoe.js'][37]++;
              throw Error(("Invalid object: " + param));
            }
          }
        }
        else {
          _$jscoverage['hoe.js'][41]++;
          throw Error(("Invalid type: " + type));
        }
      }
    }
}
  _$jscoverage['hoe.js'][45]++;
  for (var i = 0, max = arguments.length; (i < max); (i++)) {
    _$jscoverage['hoe.js'][46]++;
    _guess_apply(this, arguments[i]);
}
  _$jscoverage['hoe.js'][48]++;
  return this;
});
_$jscoverage['hoe.js'][51]++;
jQuery.fn.hoe = hoe.jquery_plugin;
_$jscoverage['hoe.js'][55]++;
hoe.init_default_tags = ["body", "div", "span", "pre", "p", "a", "ul", "ol", "li", "h1", "h2", "h3", "h4", "h5", "h6", "strong", "section", "header", "footer", "form", "label", "input", "select", "button", "table", "thead", "tbody", "tfoot", "tr", "th", "td"];
_$jscoverage['hoe.js'][62]++;
hoe.init = (function (namespace, tags) {
  _$jscoverage['hoe.js'][63]++;
  namespace = (namespace || window);
  _$jscoverage['hoe.js'][64]++;
  tags = (tags || hoe.init_default_tags);
  _$jscoverage['hoe.js'][66]++;
  function _create_function(tag) {
    _$jscoverage['hoe.js'][67]++;
    return (function () {
  _$jscoverage['hoe.js'][68]++;
  var $ele = jQuery(document.createElement(tag));
  _$jscoverage['hoe.js'][69]++;
  return $ele.hoe.apply($ele, arguments);
});
}
  _$jscoverage['hoe.js'][72]++;
  for (var i = 0, max = tags.length; (i < max); (i++)) {
    _$jscoverage['hoe.js'][73]++;
    namespace[tags[i]] = _create_function(tags[i]);
}
});
_$jscoverage['hoe.js'][79]++;
hoe.inherit = (function (base_type, constructor) {
  _$jscoverage['hoe.js'][80]++;
  var new_type;
  _$jscoverage['hoe.js'][81]++;
  if (constructor) {
    _$jscoverage['hoe.js'][82]++;
    new_type = constructor;
  }
  else {
    _$jscoverage['hoe.js'][85]++;
    new_type = (function () {
  _$jscoverage['hoe.js'][85]++;
  return base_type.apply(this, arguments);
});
  }
  _$jscoverage['hoe.js'][87]++;
  $.extend(new_type, base_type);
  _$jscoverage['hoe.js'][88]++;
  $.extend(new_type.prototype, base_type.prototype);
  _$jscoverage['hoe.js'][89]++;
  return new_type;
});
_$jscoverage['hoe.js'][94]++;
hoe.Type = (function (constructor) {
  _$jscoverage['hoe.js'][95]++;
  return hoe.inherit(hoe.Type, constructor);
});
_$jscoverage['hoe.js'][97]++;
hoe.Type.prototype = {on: (function (observed, event, callback) {
  _$jscoverage['hoe.js'][100]++;
  if ((observed instanceof jQuery)) {
    _$jscoverage['hoe.js'][101]++;
    observed.bind(event, $.proxy(callback, this));
  }
  else {
    _$jscoverage['hoe.js'][104]++;
    if (((typeof observed._hoe_obs) === "undefined")) {
      _$jscoverage['hoe.js'][105]++;
      observed._hoe_obs = {};
    }
    _$jscoverage['hoe.js'][107]++;
    if ((! (event in observed._hoe_obs))) {
      _$jscoverage['hoe.js'][108]++;
      observed._hoe_obs[event] = [];
    }
    _$jscoverage['hoe.js'][110]++;
    observed._hoe_obs[event].push({scope: this, fn: callback});
  }
}), trigger: (function (event) {
  _$jscoverage['hoe.js'][114]++;
  if ((this._hoe_obs && this._hoe_obs[event])) {
    _$jscoverage['hoe.js'][115]++;
    var callbacks = this._hoe_obs[event];
    _$jscoverage['hoe.js'][116]++;
    for (var i = 0, max = callbacks.length; (i < max); (i++)) {
      _$jscoverage['hoe.js'][117]++;
      callbacks[i].fn.apply(callbacks[i].scope, Array.prototype.slice.call(arguments, 1));
}
  }
}), forEach: (function (seq, fn) {
  _$jscoverage['hoe.js'][125]++;
  if ((jQuery.type(seq) == "array")) {
    _$jscoverage['hoe.js'][126]++;
    for (var i = 0, len = seq.length; (i < len); (++i)) {
      _$jscoverage['hoe.js'][127]++;
      fn.call(this, seq[i], i, seq);
}
  }
  else {
    _$jscoverage['hoe.js'][131]++;
    for (var key in seq) {
      _$jscoverage['hoe.js'][132]++;
      fn.call(this, seq[key], key, seq);
}
  }
})};
_$jscoverage['hoe.js'][140]++;
if (((typeof exports) !== "undefined")) {
  _$jscoverage['hoe.js'][141]++;
  exports.hoe = hoe;
}
